/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as RegisterIndexImport } from './routes/register/index'
import { Route as ProfileIndexImport } from './routes/profile/index'
import { Route as LoginIndexImport } from './routes/login/index'
import { Route as LeaderboardIndexImport } from './routes/leaderboard/index'
import { Route as QuizzesOwnIndexImport } from './routes/quizzes/own/index'
import { Route as QuizzesAddIndexImport } from './routes/quizzes/add/index'
import { Route as QuizzesQuizIdIndexImport } from './routes/quizzes/$quizId/index'
import { Route as QuizzesQuizIdSolveIndexImport } from './routes/quizzes/$quizId/solve/index'
import { Route as QuizzesQuizIdEditIndexImport } from './routes/quizzes/$quizId/edit/index'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const RegisterIndexRoute = RegisterIndexImport.update({
  id: '/register/',
  path: '/register/',
  getParentRoute: () => rootRoute,
} as any)

const ProfileIndexRoute = ProfileIndexImport.update({
  id: '/profile/',
  path: '/profile/',
  getParentRoute: () => rootRoute,
} as any)

const LoginIndexRoute = LoginIndexImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any)

const LeaderboardIndexRoute = LeaderboardIndexImport.update({
  id: '/leaderboard/',
  path: '/leaderboard/',
  getParentRoute: () => rootRoute,
} as any)

const QuizzesOwnIndexRoute = QuizzesOwnIndexImport.update({
  id: '/quizzes/own/',
  path: '/quizzes/own/',
  getParentRoute: () => rootRoute,
} as any)

const QuizzesAddIndexRoute = QuizzesAddIndexImport.update({
  id: '/quizzes/add/',
  path: '/quizzes/add/',
  getParentRoute: () => rootRoute,
} as any)

const QuizzesQuizIdIndexRoute = QuizzesQuizIdIndexImport.update({
  id: '/quizzes/$quizId/',
  path: '/quizzes/$quizId/',
  getParentRoute: () => rootRoute,
} as any)

const QuizzesQuizIdSolveIndexRoute = QuizzesQuizIdSolveIndexImport.update({
  id: '/quizzes/$quizId/solve/',
  path: '/quizzes/$quizId/solve/',
  getParentRoute: () => rootRoute,
} as any)

const QuizzesQuizIdEditIndexRoute = QuizzesQuizIdEditIndexImport.update({
  id: '/quizzes/$quizId/edit/',
  path: '/quizzes/$quizId/edit/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/leaderboard/': {
      id: '/leaderboard/'
      path: '/leaderboard'
      fullPath: '/leaderboard'
      preLoaderRoute: typeof LeaderboardIndexImport
      parentRoute: typeof rootRoute
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/profile/': {
      id: '/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileIndexImport
      parentRoute: typeof rootRoute
    }
    '/register/': {
      id: '/register/'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterIndexImport
      parentRoute: typeof rootRoute
    }
    '/quizzes/$quizId/': {
      id: '/quizzes/$quizId/'
      path: '/quizzes/$quizId'
      fullPath: '/quizzes/$quizId'
      preLoaderRoute: typeof QuizzesQuizIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/quizzes/add/': {
      id: '/quizzes/add/'
      path: '/quizzes/add'
      fullPath: '/quizzes/add'
      preLoaderRoute: typeof QuizzesAddIndexImport
      parentRoute: typeof rootRoute
    }
    '/quizzes/own/': {
      id: '/quizzes/own/'
      path: '/quizzes/own'
      fullPath: '/quizzes/own'
      preLoaderRoute: typeof QuizzesOwnIndexImport
      parentRoute: typeof rootRoute
    }
    '/quizzes/$quizId/edit/': {
      id: '/quizzes/$quizId/edit/'
      path: '/quizzes/$quizId/edit'
      fullPath: '/quizzes/$quizId/edit'
      preLoaderRoute: typeof QuizzesQuizIdEditIndexImport
      parentRoute: typeof rootRoute
    }
    '/quizzes/$quizId/solve/': {
      id: '/quizzes/$quizId/solve/'
      path: '/quizzes/$quizId/solve'
      fullPath: '/quizzes/$quizId/solve'
      preLoaderRoute: typeof QuizzesQuizIdSolveIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/leaderboard': typeof LeaderboardIndexRoute
  '/login': typeof LoginIndexRoute
  '/profile': typeof ProfileIndexRoute
  '/register': typeof RegisterIndexRoute
  '/quizzes/$quizId': typeof QuizzesQuizIdIndexRoute
  '/quizzes/add': typeof QuizzesAddIndexRoute
  '/quizzes/own': typeof QuizzesOwnIndexRoute
  '/quizzes/$quizId/edit': typeof QuizzesQuizIdEditIndexRoute
  '/quizzes/$quizId/solve': typeof QuizzesQuizIdSolveIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/leaderboard': typeof LeaderboardIndexRoute
  '/login': typeof LoginIndexRoute
  '/profile': typeof ProfileIndexRoute
  '/register': typeof RegisterIndexRoute
  '/quizzes/$quizId': typeof QuizzesQuizIdIndexRoute
  '/quizzes/add': typeof QuizzesAddIndexRoute
  '/quizzes/own': typeof QuizzesOwnIndexRoute
  '/quizzes/$quizId/edit': typeof QuizzesQuizIdEditIndexRoute
  '/quizzes/$quizId/solve': typeof QuizzesQuizIdSolveIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/leaderboard/': typeof LeaderboardIndexRoute
  '/login/': typeof LoginIndexRoute
  '/profile/': typeof ProfileIndexRoute
  '/register/': typeof RegisterIndexRoute
  '/quizzes/$quizId/': typeof QuizzesQuizIdIndexRoute
  '/quizzes/add/': typeof QuizzesAddIndexRoute
  '/quizzes/own/': typeof QuizzesOwnIndexRoute
  '/quizzes/$quizId/edit/': typeof QuizzesQuizIdEditIndexRoute
  '/quizzes/$quizId/solve/': typeof QuizzesQuizIdSolveIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/leaderboard'
    | '/login'
    | '/profile'
    | '/register'
    | '/quizzes/$quizId'
    | '/quizzes/add'
    | '/quizzes/own'
    | '/quizzes/$quizId/edit'
    | '/quizzes/$quizId/solve'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/leaderboard'
    | '/login'
    | '/profile'
    | '/register'
    | '/quizzes/$quizId'
    | '/quizzes/add'
    | '/quizzes/own'
    | '/quizzes/$quizId/edit'
    | '/quizzes/$quizId/solve'
  id:
    | '__root__'
    | '/'
    | '/leaderboard/'
    | '/login/'
    | '/profile/'
    | '/register/'
    | '/quizzes/$quizId/'
    | '/quizzes/add/'
    | '/quizzes/own/'
    | '/quizzes/$quizId/edit/'
    | '/quizzes/$quizId/solve/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LeaderboardIndexRoute: typeof LeaderboardIndexRoute
  LoginIndexRoute: typeof LoginIndexRoute
  ProfileIndexRoute: typeof ProfileIndexRoute
  RegisterIndexRoute: typeof RegisterIndexRoute
  QuizzesQuizIdIndexRoute: typeof QuizzesQuizIdIndexRoute
  QuizzesAddIndexRoute: typeof QuizzesAddIndexRoute
  QuizzesOwnIndexRoute: typeof QuizzesOwnIndexRoute
  QuizzesQuizIdEditIndexRoute: typeof QuizzesQuizIdEditIndexRoute
  QuizzesQuizIdSolveIndexRoute: typeof QuizzesQuizIdSolveIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LeaderboardIndexRoute: LeaderboardIndexRoute,
  LoginIndexRoute: LoginIndexRoute,
  ProfileIndexRoute: ProfileIndexRoute,
  RegisterIndexRoute: RegisterIndexRoute,
  QuizzesQuizIdIndexRoute: QuizzesQuizIdIndexRoute,
  QuizzesAddIndexRoute: QuizzesAddIndexRoute,
  QuizzesOwnIndexRoute: QuizzesOwnIndexRoute,
  QuizzesQuizIdEditIndexRoute: QuizzesQuizIdEditIndexRoute,
  QuizzesQuizIdSolveIndexRoute: QuizzesQuizIdSolveIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/leaderboard/",
        "/login/",
        "/profile/",
        "/register/",
        "/quizzes/$quizId/",
        "/quizzes/add/",
        "/quizzes/own/",
        "/quizzes/$quizId/edit/",
        "/quizzes/$quizId/solve/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/leaderboard/": {
      "filePath": "leaderboard/index.tsx"
    },
    "/login/": {
      "filePath": "login/index.tsx"
    },
    "/profile/": {
      "filePath": "profile/index.tsx"
    },
    "/register/": {
      "filePath": "register/index.tsx"
    },
    "/quizzes/$quizId/": {
      "filePath": "quizzes/$quizId/index.tsx"
    },
    "/quizzes/add/": {
      "filePath": "quizzes/add/index.tsx"
    },
    "/quizzes/own/": {
      "filePath": "quizzes/own/index.tsx"
    },
    "/quizzes/$quizId/edit/": {
      "filePath": "quizzes/$quizId/edit/index.tsx"
    },
    "/quizzes/$quizId/solve/": {
      "filePath": "quizzes/$quizId/solve/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
